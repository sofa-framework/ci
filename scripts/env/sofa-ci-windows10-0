#!/bin/bash

# Display Name	sofa-ci-windows10-0
# Name	sofa-ci-windows10-0
# State	Running
# Template	Windows 10
# Dynamically Scalable	Yes
# OS Type	Windows 10 (64-bit)
# Attached ISO
# Compute offering	xxLarge Instance
# # of CPU Cores	4
# CPU (in MHz)	2000
# Memory (in MB)	12288

export VM_HAS_REQUIRED_LIBS="true"

export VM_MAKE_OPTIONS="-j4"

export VM_MAX_PARALLEL_TESTS="4"

export VM_BUILDS_IMGUI="true"


export VM_HAS_BULLET="false"

export VM_HAS_ASSIMP="true"

export VM_HAS_CGAL="false" # TODO: Update CGALPlugin to use CGAL in header-only mode (CGAL >= 5.0)

export VM_HAS_CUDA="true"

export VM_HAS_OPENCASCADE="false" # TODO: Update FindOpenCascade.cmake in MeshSTEPLoader


export VM_BOOST_PATH="C:/boost"

export VM_QT_PATH="C:/Qt/6.8.1"

export PYTHONIOENCODING="UTF-8"
export PYTHONUSERBASE="C:/tmp/pythonuserbase" && mkdir -p "$PYTHONUSERBASE" && chmod -R 777 "$PYTHONUSERBASE"
export VM_PYTHON_EXECUTABLE="C:/Python27/python.exe"
export VM_PYTHON_PYTHONPATH="C:/Python27/Lib/site-packages"
export VM_PYTHON3_EXECUTABLE="C:/Python310/python.exe"
export VM_PYTHON3_PYTHONPATH="C:/Python310/Lib/site-packages"
CI_PYTHON3_VERSION_WINDOWS="$(echo "$CI_PYTHON3_VERSION" | sed 's:\.::g')"
if [[ -n "$CI_PYTHON3_VERSION_WINDOWS" ]] &&
   [[ -e "C:/Python$CI_PYTHON3_VERSION_WINDOWS/python.exe" ]] &&
   [[ -e "C:/Python$CI_PYTHON3_VERSION_WINDOWS/Lib/site-packages" ]]; then
    export VM_PYTHON3_EXECUTABLE="C:/Python$CI_PYTHON3_VERSION_WINDOWS/python.exe"
    export VM_PYTHON3_PYTHONPATH="C:/Python$CI_PYTHON3_VERSION_WINDOWS/Lib/site-packages"
fi
export VM_PYBIND11_CONFIG_EXECUTABLE="$VM_PYTHON3_EXECUTABLE -m pybind11"

export VM_BULLET_PATH=""

export VM_ASSIMP_PATH="C:/assimp/5.2.2/install"

export VM_CGAL_PATH="C:/cgal/5.4.1/install"

export VM_OPENCASCADE_PATH="C:/OpenCascade/opencascade-7.4.0"

export VM_EIGEN3_PATH="C:/eigen/eigen-3.4.0"

export VM_NODEEDITOR_PATH="C:/NodeEditor/2.1.3/install"

export VM_CUDA_ARCH="sm_50"
